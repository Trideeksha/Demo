<?xml version="1.0" encoding="UTF-8"?><testrun name="BMICalculatorTest" project="HealthyCoderApp" tests="19" started="19" failures="0" errors="1" ignored="0">
  <testsuite name="com.healthycoderapp.BMICalculatorTest" time="0.275" displayname="BMICalculatorTest" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]">
    <testcase name="should_ReturnNullWorstHitBMI_When_Coder_ListNotEmpty" classname="com.healthycoderapp.BMICalculatorTest" time="0.026" displayname="should_ReturnNullWorstHitBMI_When_Coder_ListNotEmpty()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_ReturnNullWorstHitBMI_When_Coder_ListNotEmpty()]">
      <error>java.lang.Error: Unresolved compilation problem: 
	The method assumeTrue(boolean) is ambiguous for the type BMICalculatorTest
&#13;
	at com.healthycoderapp.BMICalculatorTest.should_ReturnNullWorstHitBMI_When_Coder_ListNotEmpty(BMICalculatorTest.java:181)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)&#13;
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)&#13;
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)&#13;
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)&#13;
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:205)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:201)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)&#13;
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)&#13;
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)&#13;
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)&#13;
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:141)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
    </testcase>
    <testsuite name="should_ReturnTrue_when_DietRecommended(com.healthycoderapp.BMICalculatorTest)" time="0.042" displayname="should_ReturnTrue_when_DietRecommended(Double)" parameters="java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended(java.lang.Double)]">
      <testcase name="should_ReturnTrue_when_DietRecommended" classname="com.healthycoderapp.BMICalculatorTest" time="0.042" dynamicTest="true" displayname="[1] 89.0" parameters="java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended(java.lang.Double)]/[test-template-invocation:#1]"/>
      <testcase name="should_ReturnTrue_when_DietRecommended" classname="com.healthycoderapp.BMICalculatorTest" time="0.004" dynamicTest="true" displayname="[2] 95.0" parameters="java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended(java.lang.Double)]/[test-template-invocation:#2]"/>
      <testcase name="should_ReturnTrue_when_DietRecommended" classname="com.healthycoderapp.BMICalculatorTest" time="0.004" dynamicTest="true" displayname="[3] 110.0" parameters="java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended(java.lang.Double)]/[test-template-invocation:#3]"/>
    </testsuite>
    <testcase name="should_Return_CorrectBMIScoreArray_When_CoderListNotEmpty" classname="com.healthycoderapp.BMICalculatorTest" time="0.004" displayname="should_Return_CorrectBMIScoreArray_When_CoderListNotEmpty()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_Return_CorrectBMIScoreArray_When_CoderListNotEmpty()]"/>
    <testcase name="should_ThrowArithmeticException_When_HeightZero" classname="com.healthycoderapp.BMICalculatorTest" time="0.005" displayname="should_ThrowArithmeticException_When_HeightZero()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_ThrowArithmeticException_When_HeightZero()]"/>
    <testcase name="should_ReturnCodeWithWorstHitBMI_When_Coder_ListNotEmpty" classname="com.healthycoderapp.BMICalculatorTest" time="0.006" displayname="should_ReturnCodeWithWorstHitBMI_When_Coder_ListNotEmpty()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_ReturnCodeWithWorstHitBMI_When_Coder_ListNotEmpty()]"/>
    <testcase name="should_ReturnFalse_when_DietRecommended" classname="com.healthycoderapp.BMICalculatorTest" time="0.073" displayname="should_ReturnFalse_when_DietRecommended()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_ReturnFalse_when_DietRecommended()]"/>
    <testsuite name="should_ReturnTrue_when_DietRecommendedwithSheet(com.healthycoderapp.BMICalculatorTest)" time="0.003" displayname="should_ReturnTrue_when_DietRecommendedwithSheet(Double, Double)" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]">
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.003" dynamicTest="true" displayname="weight=82.0, height=1.68" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#1]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.003" dynamicTest="true" displayname="weight=85.0, height=1.69" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#2]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.003" dynamicTest="true" displayname="weight=89.0, height=1.72" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#3]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.002" dynamicTest="true" displayname="weight=95.0, height=1.75" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#4]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.003" dynamicTest="true" displayname="weight=110.0, height=1.78" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#5]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.003" dynamicTest="true" displayname="weight=120.0, height=1.89" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#6]"/>
      <testcase name="should_ReturnTrue_when_DietRecommendedwithSheet" classname="com.healthycoderapp.BMICalculatorTest" time="0.011" dynamicTest="true" displayname="weight=125.5, height=1.92" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommendedwithSheet(java.lang.Double, java.lang.Double)]/[test-template-invocation:#7]"/>
    </testsuite>
    <testsuite name="should_ReturnTrue_when_DietRecommended_copy(com.healthycoderapp.BMICalculatorTest)" time="0.002" displayname="should_ReturnTrue_when_DietRecommended_copy(Double, Double)" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended_copy(java.lang.Double, java.lang.Double)]">
      <testcase name="should_ReturnTrue_when_DietRecommended_copy" classname="com.healthycoderapp.BMICalculatorTest" time="0.002" dynamicTest="true" displayname="weight=89.0, height=1.72" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended_copy(java.lang.Double, java.lang.Double)]/[test-template-invocation:#1]"/>
      <testcase name="should_ReturnTrue_when_DietRecommended_copy" classname="com.healthycoderapp.BMICalculatorTest" time="0.002" dynamicTest="true" displayname="weight=95.0, height=1.75" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended_copy(java.lang.Double, java.lang.Double)]/[test-template-invocation:#2]"/>
      <testcase name="should_ReturnTrue_when_DietRecommended_copy" classname="com.healthycoderapp.BMICalculatorTest" time="0.001" dynamicTest="true" displayname="weight=110.0, height=1.78" parameters="java.lang.Double,java.lang.Double" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[test-template:should_ReturnTrue_when_DietRecommended_copy(java.lang.Double, java.lang.Double)]/[test-template-invocation:#3]"/>
    </testsuite>
    <testcase name="should_ReturnCodeWithWorstHitBMIIn1Ms_When_CoderListHas10000Elements" classname="com.healthycoderapp.BMICalculatorTest" time="0.031" displayname="should_ReturnCodeWithWorstHitBMIIn1Ms_When_CoderListHas10000Elements()" uniqueid="[engine:junit-jupiter]/[class:com.healthycoderapp.BMICalculatorTest]/[method:should_ReturnCodeWithWorstHitBMIIn1Ms_When_CoderListHas10000Elements()]"/>
  </testsuite>
</testrun>
